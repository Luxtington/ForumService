basePath: /api
definitions:
  models.Comment:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
      can_delete:
        type: boolean
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      post_id:
        type: integer
    type: object
  models.Post:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
      can_edit:
        type: boolean
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      thread_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Thread:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: API для форума
  title: Forum Service API
  version: "1.0"
paths:
  /chat:
    get:
      description: Возвращает список всех сообщений в общем чате.
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of messages
          schema:
            items:
              type: object
            type: array
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить все сообщения чата
      tags:
      - chat
    post:
      consumes:
      - application/json
      description: Создаёт новое сообщение в общем чате. Доступно только авторизованным
        пользователям.
      parameters:
      - description: Данные для создания сообщения
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Returns created message
          schema:
            type: object
        "400":
          description: неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: пользователь не аутентифицирован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать сообщение в чате
      tags:
      - chat
  /comments:
    post:
      consumes:
      - application/json
      description: Создаёт новый комментарий к посту. Доступно только авторизованным
        пользователям.
      parameters:
      - description: Данные для создания комментария
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: пользователь не аутентифицирован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новый комментарий
      tags:
      - comments
  /comments/{id}:
    delete:
      description: Удаляет комментарий. Доступно только автору комментария или администратору.
      parameters:
      - description: ID комментария
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Неверный ID комментария
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: пользователь не аутентифицирован
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: нет прав для удаления этого комментария
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить комментарий
      tags:
      - comments
  /comments/chat:
    post:
      consumes:
      - application/json
      description: Создаёт новое сообщение в общем чате. Доступно только авторизованным
        пользователям.
      parameters:
      - description: Данные для создания сообщения
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка при создании сообщения
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать сообщение в чате
      tags:
      - comments
  /posts:
    get:
      description: Отображает HTML-страницу со списком всех постов.
      produces:
      - text/html
      responses:
        "200":
          description: HTML страница
          schema:
            type: string
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Список постов
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Создаёт новый пост в указанном треде. Доступно только авторизованным
        пользователям.
      parameters:
      - description: Данные для создания поста
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: пользователь не аутентифицирован
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: нет прав для создания поста в этом треде
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новый пост
      tags:
      - posts
  /posts/{id}:
    delete:
      description: Удаляет пост. Доступно только автору поста или администратору.
      parameters:
      - description: ID поста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: invalid post ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: no permission to delete this post
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить пост
      tags:
      - posts
    get:
      description: Отображает HTML-страницу с информацией о посте.
      parameters:
      - description: ID поста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/html
      responses:
        "200":
          description: HTML страница
          schema:
            type: string
        "400":
          description: Неверный ID поста
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пост не найден
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Показать пост
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Обновляет информацию о посте. Доступно только автору поста или
        администратору.
      parameters:
      - description: ID поста
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления поста
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: invalid post ID или неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: no permission to update this post
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить пост
      tags:
      - posts
  /posts/{id}/comments:
    get:
      description: Возвращает информацию о посте и все комментарии к нему.
      parameters:
      - description: ID поста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'post: информация о посте, comments: список комментариев'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid post ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: post not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить пост с комментариями
      tags:
      - posts
  /posts/{id}/edit:
    get:
      description: Отображает HTML-страницу с формой для редактирования поста.
      parameters:
      - description: ID поста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/html
      responses:
        "200":
          description: HTML страница
          schema:
            type: string
        "400":
          description: Неверный ID поста
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пост не найден
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Показать форму редактирования поста
      tags:
      - posts
  /posts/create:
    get:
      description: Отображает HTML-страницу с формой для создания нового поста.
      produces:
      - text/html
      responses:
        "200":
          description: HTML страница
          schema:
            type: string
      summary: Показать форму создания поста
      tags:
      - posts
  /threads:
    get:
      description: Возвращает список всех тредов форума.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Thread'
            type: array
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить все треды
      tags:
      - threads
    post:
      consumes:
      - application/json
      description: Создаёт новый тред (тему) форума. Доступно только авторизованным
        пользователям.
      parameters:
      - description: Данные для создания треда
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Thread'
        "400":
          description: неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: пользователь не аутентифицирован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новый тред
      tags:
      - threads
  /threads/{id}:
    delete:
      description: Удаляет тред. Доступно только автору треда или администратору.
      parameters:
      - description: ID треда
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: invalid thread ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: no permission to delete this thread
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить тред
      tags:
      - threads
    get:
      description: Возвращает информацию о треде и все посты в нём.
      parameters:
      - description: ID треда
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'thread: информация о треде, posts: список постов'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: invalid thread ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: thread not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить тред с постами
      tags:
      - threads
    put:
      consumes:
      - application/json
      description: Обновляет информацию о треде. Доступно только автору треда или
        администратору.
      parameters:
      - description: ID треда
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления треда
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Thread'
        "400":
          description: invalid thread ID или неверный формат данных
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: no permission to update this thread
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить тред
      tags:
      - threads
  /threads/{id}/posts:
    get:
      description: Возвращает список всех постов в указанном треде.
      parameters:
      - description: ID треда
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: invalid thread ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: thread not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить посты треда
      tags:
      - threads
schemes:
- http
- https
swagger: "2.0"
