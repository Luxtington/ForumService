// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: ForumService/proto/forum.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThreadRequest) Reset() {
	*x = CreateThreadRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThreadRequest) ProtoMessage() {}

func (x *CreateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThreadRequest.ProtoReflect.Descriptor instead.
func (*CreateThreadRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{0}
}

func (x *CreateThreadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateThreadRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type GetThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      uint32                 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThreadRequest) Reset() {
	*x = GetThreadRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadRequest) ProtoMessage() {}

func (x *GetThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadRequest.ProtoReflect.Descriptor instead.
func (*GetThreadRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{1}
}

func (x *GetThreadRequest) GetThreadId() uint32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

type ThreadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Posts         []*PostResponse        `protobuf:"bytes,5,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadResponse) Reset() {
	*x = ThreadResponse{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadResponse) ProtoMessage() {}

func (x *ThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadResponse.ProtoReflect.Descriptor instead.
func (*ThreadResponse) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{2}
}

func (x *ThreadResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThreadResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ThreadResponse) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *ThreadResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ThreadResponse) GetPosts() []*PostResponse {
	if x != nil {
		return x.Posts
	}
	return nil
}

type CreatePostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      uint32                 `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePostRequest) GetThreadId() uint32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type GetPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        uint32                 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostRequest) Reset() {
	*x = GetPostRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostRequest) ProtoMessage() {}

func (x *GetPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostRequest.ProtoReflect.Descriptor instead.
func (*GetPostRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{4}
}

func (x *GetPostRequest) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type PostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ThreadId      uint32                 `protobuf:"varint,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Comments      []*CommentResponse     `protobuf:"bytes,6,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostResponse) Reset() {
	*x = PostResponse{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostResponse) ProtoMessage() {}

func (x *PostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostResponse.ProtoReflect.Descriptor instead.
func (*PostResponse) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{5}
}

func (x *PostResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostResponse) GetThreadId() uint32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *PostResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostResponse) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *PostResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PostResponse) GetComments() []*CommentResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        uint32                 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCommentRequest) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type GetCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        uint32                 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsRequest) Reset() {
	*x = GetCommentsRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsRequest) ProtoMessage() {}

func (x *GetCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetCommentsRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{7}
}

func (x *GetCommentsRequest) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type CommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId        uint32                 `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,4,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentResponse) Reset() {
	*x = CommentResponse{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResponse) ProtoMessage() {}

func (x *CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResponse.ProtoReflect.Descriptor instead.
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{8}
}

func (x *CommentResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentResponse) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CommentResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentResponse) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CommentResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type CommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*CommentResponse     `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentsResponse) Reset() {
	*x = CommentsResponse{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsResponse) ProtoMessage() {}

func (x *CommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsResponse.ProtoReflect.Descriptor instead.
func (*CommentsResponse) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{9}
}

func (x *CommentsResponse) GetComments() []*CommentResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateChatMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChatMessageRequest) Reset() {
	*x = CreateChatMessageRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatMessageRequest) ProtoMessage() {}

func (x *CreateChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{10}
}

func (x *CreateChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateChatMessageRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type GetChatMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatMessagesRequest) Reset() {
	*x = GetChatMessagesRequest{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatMessagesRequest) ProtoMessage() {}

func (x *GetChatMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetChatMessagesRequest) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{11}
}

type ChatMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      uint32                 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName    string                 `protobuf:"bytes,4,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageResponse) Reset() {
	*x = ChatMessageResponse{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageResponse) ProtoMessage() {}

func (x *ChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageResponse.ProtoReflect.Descriptor instead.
func (*ChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{12}
}

func (x *ChatMessageResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatMessageResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessageResponse) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *ChatMessageResponse) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *ChatMessageResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ChatMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessageResponse `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessagesResponse) Reset() {
	*x = ChatMessagesResponse{}
	mi := &file_ForumService_proto_forum_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessagesResponse) ProtoMessage() {}

func (x *ChatMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ForumService_proto_forum_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessagesResponse.ProtoReflect.Descriptor instead.
func (*ChatMessagesResponse) Descriptor() ([]byte, []int) {
	return file_ForumService_proto_forum_proto_rawDescGZIP(), []int{13}
}

func (x *ChatMessagesResponse) GetMessages() []*ChatMessageResponse {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_ForumService_proto_forum_proto protoreflect.FileDescriptor

const file_ForumService_proto_forum_proto_rawDesc = "" +
	"\n" +
	"\x1eForumService/proto/forum.proto\x12\x05forum\"H\n" +
	"\x13CreateThreadRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\rR\bauthorId\"/\n" +
	"\x10GetThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\rR\bthreadId\"\x9d\x01\n" +
	"\x0eThreadResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\rR\bauthorId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\x12)\n" +
	"\x05posts\x18\x05 \x03(\v2\x13.forum.PostResponseR\x05posts\"g\n" +
	"\x11CreatePostRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\rR\bthreadId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\rR\bauthorId\")\n" +
	"\x0eGetPostRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\rR\x06postId\"\xc5\x01\n" +
	"\fPostResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\tthread_id\x18\x02 \x01(\rR\bthreadId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x04 \x01(\rR\bauthorId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x122\n" +
	"\bcomments\x18\x06 \x03(\v2\x16.forum.CommentResponseR\bcomments\"f\n" +
	"\x14CreateCommentRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\rR\x06postId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\rR\bauthorId\"-\n" +
	"\x12GetCommentsRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\rR\x06postId\"\x90\x01\n" +
	"\x0fCommentResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\rR\x06postId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x04 \x01(\rR\bauthorId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"F\n" +
	"\x10CommentsResponse\x122\n" +
	"\bcomments\x18\x01 \x03(\v2\x16.forum.CommentResponseR\bcomments\"Q\n" +
	"\x18CreateChatMessageRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\rR\bauthorId\"\x18\n" +
	"\x16GetChatMessagesRequest\"\x9c\x01\n" +
	"\x13ChatMessageResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\rR\bauthorId\x12\x1f\n" +
	"\vauthor_name\x18\x04 \x01(\tR\n" +
	"authorName\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\"N\n" +
	"\x14ChatMessagesResponse\x126\n" +
	"\bmessages\x18\x01 \x03(\v2\x1a.forum.ChatMessageResponseR\bmessages2\xbc\x04\n" +
	"\fForumService\x12C\n" +
	"\fCreateThread\x12\x1a.forum.CreateThreadRequest\x1a\x15.forum.ThreadResponse\"\x00\x12=\n" +
	"\tGetThread\x12\x17.forum.GetThreadRequest\x1a\x15.forum.ThreadResponse\"\x00\x12=\n" +
	"\n" +
	"CreatePost\x12\x18.forum.CreatePostRequest\x1a\x13.forum.PostResponse\"\x00\x127\n" +
	"\aGetPost\x12\x15.forum.GetPostRequest\x1a\x13.forum.PostResponse\"\x00\x12F\n" +
	"\rCreateComment\x12\x1b.forum.CreateCommentRequest\x1a\x16.forum.CommentResponse\"\x00\x12C\n" +
	"\vGetComments\x12\x19.forum.GetCommentsRequest\x1a\x17.forum.CommentsResponse\"\x00\x12R\n" +
	"\x11CreateChatMessage\x12\x1f.forum.CreateChatMessageRequest\x1a\x1a.forum.ChatMessageResponse\"\x00\x12O\n" +
	"\x0fGetChatMessages\x12\x1d.forum.GetChatMessagesRequest\x1a\x1b.forum.ChatMessagesResponse\"\x00B\x14Z\x12ForumService/protob\x06proto3"

var (
	file_ForumService_proto_forum_proto_rawDescOnce sync.Once
	file_ForumService_proto_forum_proto_rawDescData []byte
)

func file_ForumService_proto_forum_proto_rawDescGZIP() []byte {
	file_ForumService_proto_forum_proto_rawDescOnce.Do(func() {
		file_ForumService_proto_forum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ForumService_proto_forum_proto_rawDesc), len(file_ForumService_proto_forum_proto_rawDesc)))
	})
	return file_ForumService_proto_forum_proto_rawDescData
}

var file_ForumService_proto_forum_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_ForumService_proto_forum_proto_goTypes = []any{
	(*CreateThreadRequest)(nil),      // 0: forum.CreateThreadRequest
	(*GetThreadRequest)(nil),         // 1: forum.GetThreadRequest
	(*ThreadResponse)(nil),           // 2: forum.ThreadResponse
	(*CreatePostRequest)(nil),        // 3: forum.CreatePostRequest
	(*GetPostRequest)(nil),           // 4: forum.GetPostRequest
	(*PostResponse)(nil),             // 5: forum.PostResponse
	(*CreateCommentRequest)(nil),     // 6: forum.CreateCommentRequest
	(*GetCommentsRequest)(nil),       // 7: forum.GetCommentsRequest
	(*CommentResponse)(nil),          // 8: forum.CommentResponse
	(*CommentsResponse)(nil),         // 9: forum.CommentsResponse
	(*CreateChatMessageRequest)(nil), // 10: forum.CreateChatMessageRequest
	(*GetChatMessagesRequest)(nil),   // 11: forum.GetChatMessagesRequest
	(*ChatMessageResponse)(nil),      // 12: forum.ChatMessageResponse
	(*ChatMessagesResponse)(nil),     // 13: forum.ChatMessagesResponse
}
var file_ForumService_proto_forum_proto_depIdxs = []int32{
	5,  // 0: forum.ThreadResponse.posts:type_name -> forum.PostResponse
	8,  // 1: forum.PostResponse.comments:type_name -> forum.CommentResponse
	8,  // 2: forum.CommentsResponse.comments:type_name -> forum.CommentResponse
	12, // 3: forum.ChatMessagesResponse.messages:type_name -> forum.ChatMessageResponse
	0,  // 4: forum.ForumService.CreateThread:input_type -> forum.CreateThreadRequest
	1,  // 5: forum.ForumService.GetThread:input_type -> forum.GetThreadRequest
	3,  // 6: forum.ForumService.CreatePost:input_type -> forum.CreatePostRequest
	4,  // 7: forum.ForumService.GetPost:input_type -> forum.GetPostRequest
	6,  // 8: forum.ForumService.CreateComment:input_type -> forum.CreateCommentRequest
	7,  // 9: forum.ForumService.GetComments:input_type -> forum.GetCommentsRequest
	10, // 10: forum.ForumService.CreateChatMessage:input_type -> forum.CreateChatMessageRequest
	11, // 11: forum.ForumService.GetChatMessages:input_type -> forum.GetChatMessagesRequest
	2,  // 12: forum.ForumService.CreateThread:output_type -> forum.ThreadResponse
	2,  // 13: forum.ForumService.GetThread:output_type -> forum.ThreadResponse
	5,  // 14: forum.ForumService.CreatePost:output_type -> forum.PostResponse
	5,  // 15: forum.ForumService.GetPost:output_type -> forum.PostResponse
	8,  // 16: forum.ForumService.CreateComment:output_type -> forum.CommentResponse
	9,  // 17: forum.ForumService.GetComments:output_type -> forum.CommentsResponse
	12, // 18: forum.ForumService.CreateChatMessage:output_type -> forum.ChatMessageResponse
	13, // 19: forum.ForumService.GetChatMessages:output_type -> forum.ChatMessagesResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_ForumService_proto_forum_proto_init() }
func file_ForumService_proto_forum_proto_init() {
	if File_ForumService_proto_forum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ForumService_proto_forum_proto_rawDesc), len(file_ForumService_proto_forum_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ForumService_proto_forum_proto_goTypes,
		DependencyIndexes: file_ForumService_proto_forum_proto_depIdxs,
		MessageInfos:      file_ForumService_proto_forum_proto_msgTypes,
	}.Build()
	File_ForumService_proto_forum_proto = out.File
	file_ForumService_proto_forum_proto_goTypes = nil
	file_ForumService_proto_forum_proto_depIdxs = nil
}
